name: Reusable Terraform Workflow

on:
  workflow_call:
    inputs:
      terraform_version:
        description: "The Terraform version to use"
        default: "1.5.2"
        type: string
      working_directory:
        description: "Directory containing Terraform files"
        default: "./terraform"
        type: string

jobs:
  validate-plan:
    name: Validate and Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ inputs.working_directory }}

      - name: Validate Terraform
        run: terraform validate
        working-directory: ${{ inputs.working_directory }}

      - name: Print ENvS
        run: printenv
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}        

      - name: Plan Terraform
        run: terraform plan -out=tfplan
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    name: Deploy
    needs: validate-plan
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          
      - name: Plan Terraform
        run: terraform plan -out=tfplan
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ inputs.working_directory }}
        env:
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
